rm(res,zindex)
library(reshape2)
ssname <- c("Ganesan","LC","PS",
"Zhou","Resnik","Lin","Nunivers","DF","AIC")
boxplot_graphics<-function(visites,title = "",xlab ="",ylab,ylim=c(0,1), k=1,cond=0){
require(ggplot2)
require(reshape2)
mdf <- melt(visites)
print(head(mdf))
lines = "#1F3552"
#Fill pour changer le coulours
fill=c("#DCDCDC")
ggplot(mdf, aes(x = Var2, y=value))+
stat_boxplot(geom="errorbar")+
geom_boxplot(colour = "black",fill=fill,alpha=1,outlier.color = "black", outlier.shape = 20)+
geom_hline(aes(yintercept=0.25), linetype="dashed",size=cond*k)  +
ylab(ylab)+ylim(ylim[1],ylim[2])+
scale_x_discrete(name=xlab) +
ggtitle(title)+theme(axis.text.x = element_text(family ="sans",hjust = 1,angle = 45),
axis.line.x=element_line(size=0.5*k, colour="black"),
axis.line.y = element_line(size=0.5*k,colour="black"),
axis.line = element_line(size=1,colour="black"),
axis.title = element_text(size=10),
axis.title.y = element_text(family ="sans",margin = margin(0,20,0,0)),
axis.title.x = element_text(family ="sans",margin = margin(20,0,0,0)),
axis.text = element_text(family ="sans",size=10),
#panel.grid.major = element_blank(),
# panel.grid.minor = element_blank(),
# panel.border = element_blank(),
panel.background = element_blank(),
plot.title = element_text(family ="sans",size=10,hjust = 0.5,face="bold",margin = margin(5,0,40,0)))
}
chau.despreciate = names(which(is.na(chau.res$average$silhouette[,1])==T))
btm.despreciate = names(which(is.na(btm.res$average$silhouette[,1])==T))
chau.zindex= chau.zindex[!(row.names(chau.zindex) %in% chau.despreciate),]
chau.zindex=chau.zindex[,c(2:8,1,9)]
colnames(chau.zindex)  = ssname
btm.zindex= btm.zindex[!(row.names(btm.zindex) %in% btm.despreciate),]
btm.zindex=btm.zindex[,c(2:8,1,9)]
colnames(btm.zindex)  = ssname
chau.bp <- boxplot_graphics(chau.zindex,ylab="Z-index",k=1,cond = 1,ylim = c(0,0.8))
chau.bp
btm.bp <-  boxplot_graphics(btm.zindex,ylab="Z-index",k=1,cond = 1,ylim = c(0,0.8))
library(gridExtra)
tiff(filename = "git/analysissemantics/IMG_journal/Fig6.tiff",pointsize = 12,
width = 2250,height=1125,res=300)
grid.arrange(chau.bp,btm.bp, ncol=2, nrow = 1)
dev.off()
chau.SilAvg = chau.res$average$silhouette
chau.SilAvg = chau.SilAvg[!(row.names(chau.SilAvg) %in% chau.despreciate),]
chau.SilAvg = chau.SilAvg[,c(2:8,1,9)]
colnames(chau.SilAvg)  = ssname
chau.sil.bp <- boxplot_graphics(chau.SilAvg,ylab="Average silhouette width",k=1,cond=0)
btm.SilAvg = btm.res$average$silhouette
btm.SilAvg = btm.SilAvg[!(row.names(btm.SilAvg) %in% btm.despreciate),]
btm.SilAvg = btm.SilAvg[,c(2:8,1,9)]
colnames(btm.SilAvg)  = ssname
btm.sil.bp <- boxplot_graphics(btm.SilAvg,ylab="Average silhouette width",k=1,cond=0)
tiff(filename = "git/analysissemantics/IMG_journal/Fig7.tiff",pointsize = 12,
width = 2250,height=1125,res=300)
grid.arrange(chau.sil.bp,btm.sil.bp, ncol=2, nrow = 1)
dev.off()
chau.cophCom <- chau.res$complete$cophenetic
chau.cophCom <- chau.cophCom[!(row.names(chau.cophCom) %in% chau.despreciate),]
chau.cophCom = chau.cophCom[,c(2:8,1,9)]
chau.cophSin <- chau.res$single$cophenetic
chau.cophSin <- chau.cophSin[!(row.names(chau.cophSin) %in% chau.despreciate),]
chau.cophSin = chau.cophSin[,c(2:8,1,9)]
chau.cophAvg <- chau.res$average$cophenetic
chau.cophAvg <- chau.cophAvg[!(row.names(chau.cophAvg) %in% chau.despreciate),]
chau.cophAvg = chau.cophAvg[,c(2:8,1,9)]
colnames(chau.cophCom) = colnames(chau.cophSin) = colnames(chau.cophAvg)  = ssname
chau.cophCom[is.na(chau.cophCom)==TRUE] = chau.cophSin[is.na(chau.cophSin)==TRUE] = chau.cophAvg[is.na(chau.cophAvg)==TRUE]  = 0
chau.bxCom <- boxplot_graphics(chau.cophCom,title="CLHM",ylab="CCC",k=1)
chau.bxSin <- boxplot_graphics(chau.cophSin,title="SLHM",ylab="CCC",k=1)
chau.bxAvg <- boxplot_graphics(chau.cophAvg,title="ALHM",ylab="CCC",k=1)
btm.cophCom <- btm.res$complete$cophenetic
btm.cophCom <- btm.cophCom[!(row.names(btm.cophCom) %in% btm.despreciate),]
btm.cophCom = btm.cophCom[,c(2:8,1,9)]
btm.cophSin <- btm.res$single$cophenetic
btm.cophSin <- btm.cophSin[!(row.names(btm.cophSin) %in% btm.despreciate),]
btm.cophSin = btm.cophSin[,c(2:8,1,9)]
btm.cophAvg <- btm.res$average$cophenetic
btm.cophAvg <- btm.cophAvg[!(row.names(btm.cophAvg) %in% btm.despreciate),]
btm.cophAvg = btm.cophAvg[,c(2:8,1,9)]
colnames(btm.cophCom) = colnames(btm.cophSin) = colnames(btm.cophAvg)  = ssname
btm.cophCom[is.na(btm.cophCom)==TRUE] = btm.cophSin[is.na(btm.cophSin)==TRUE] = btm.cophAvg[is.na(btm.cophAvg)==TRUE]  = 0
btm.bxCom <- boxplot_graphics(btm.cophCom,title="CLHM",ylab="CCC",k=1)
btm.bxSin <- boxplot_graphics(btm.cophSin,title="SLHM",ylab="CCC",k=1)
btm.bxAvg <- boxplot_graphics(btm.cophAvg,title="ALHM",ylab="CCC",k=1)
grid.arrange(chau.bxSin,chau.bxCom,chau.bxAvg,
btm.bxSin, btm.bxCom, btm.bxAvg,
ncol=3, nrow = 2)
setwd("/home/aaron/")
dataset = "Chaussabel"
load(paste("git/analysissemantics/Sil_",dataset,"_3_SS_Incomplete.RData",sep=""))
load(paste("git/analysissemantics/Zindex_",dataset,"_3_incomplete.RData",sep=""))
chau.res = res
chau.zindex = zindex
dataset = "BTM"
load(paste("git/analysissemantics/Sil_",dataset,"_3_SS_Incomplete.RData",sep=""))
load(paste("git/analysissemantics/Zindex_",dataset,"_3_incomplete.RData",sep=""))
btm.res = res
btm.zindex =zindex
rm(res,zindex)
library(reshape2)
ssname <- c("Ganesan","LC","PS",
"Zhou","Resnik","Lin","Nunivers","DF","AIC")
boxplot_graphics<-function(visites,title = "",xlab ="",ylab,ylim=c(0,1), k=1,cond=0){
require(ggplot2)
require(reshape2)
mdf <- melt(visites)
print(head(mdf))
lines = "#1F3552"
#Fill pour changer le coulours
fill=c("#DCDCDC")
ggplot(mdf, aes(x = Var2, y=value))+
stat_boxplot(geom="errorbar")+
geom_boxplot(colour = "black",fill=fill,alpha=1,outlier.color = "black", outlier.shape = 20)+
geom_hline(aes(yintercept=0.25), linetype="dashed",size=cond*k)  +
ylab(ylab)+ylim(ylim[1],ylim[2])+
scale_x_discrete(name=xlab) +
ggtitle(title)+theme(axis.text.x = element_text(family ="sans",hjust = 1,angle = 45),
axis.line.x=element_line(size=0.5*k, colour="black"),
axis.line.y = element_line(size=0.5*k,colour="black"),
axis.line = element_line(size=1,colour="black"),
axis.title = element_text(size=10),
axis.title.y = element_text(family ="sans",margin = margin(0,20,0,0)),
axis.title.x = element_text(family ="sans",margin = margin(20,0,0,0)),
axis.text = element_text(family ="sans",size=10),
#panel.grid.major = element_blank(),
# panel.grid.minor = element_blank(),
# panel.border = element_blank(),
panel.background = element_blank(),
plot.title = element_text(family ="sans",size=10,hjust = 0.5,face="bold",margin = margin(5,0,40,0)))
}
chau.despreciate = names(which(is.na(chau.res$average$silhouette[,1])==T))
btm.despreciate = names(which(is.na(btm.res$average$silhouette[,1])==T))
chau.zindex= chau.zindex[!(row.names(chau.zindex) %in% chau.despreciate),]
chau.zindex=chau.zindex[,c(2:8,1,9)]
colnames(chau.zindex)  = ssname
btm.zindex= btm.zindex[!(row.names(btm.zindex) %in% btm.despreciate),]
btm.zindex=btm.zindex[,c(2:8,1,9)]
colnames(btm.zindex)  = ssname
chau.bp <- boxplot_graphics(chau.zindex,ylab="Z-index",k=1,cond = 1,ylim = c(0,0.8))
chau.bp
btm.bp <-  boxplot_graphics(btm.zindex,ylab="Z-index",k=1,cond = 1,ylim = c(0,0.8))
library(gridExtra)
tiff(filename = "git/analysissemantics/IMG_journal/Fig6.tiff",pointsize = 12,
width = 2250,height=1125,res=300)
grid.arrange(chau.bp,btm.bp, ncol=2, nrow = 1)
dev.off()
chau.SilAvg = chau.res$average$silhouette
chau.SilAvg = chau.SilAvg[!(row.names(chau.SilAvg) %in% chau.despreciate),]
chau.SilAvg = chau.SilAvg[,c(2:8,1,9)]
colnames(chau.SilAvg)  = ssname
chau.sil.bp <- boxplot_graphics(chau.SilAvg,ylab="Average silhouette width",k=1,cond=0)
btm.SilAvg = btm.res$average$silhouette
btm.SilAvg = btm.SilAvg[!(row.names(btm.SilAvg) %in% btm.despreciate),]
btm.SilAvg = btm.SilAvg[,c(2:8,1,9)]
colnames(btm.SilAvg)  = ssname
btm.sil.bp <- boxplot_graphics(btm.SilAvg,ylab="Average silhouette width",k=1,cond=0)
tiff(filename = "git/analysissemantics/IMG_journal/Fig7.tiff",pointsize = 12,
width = 2250,height=1125,res=300)
grid.arrange(chau.sil.bp,btm.sil.bp, ncol=2, nrow = 1)
dev.off()
chau.cophCom <- chau.res$complete$cophenetic
chau.cophCom <- chau.cophCom[!(row.names(chau.cophCom) %in% chau.despreciate),]
chau.cophCom = chau.cophCom[,c(2:8,1,9)]
chau.cophSin <- chau.res$single$cophenetic
chau.cophSin <- chau.cophSin[!(row.names(chau.cophSin) %in% chau.despreciate),]
chau.cophSin = chau.cophSin[,c(2:8,1,9)]
chau.cophAvg <- chau.res$average$cophenetic
chau.cophAvg <- chau.cophAvg[!(row.names(chau.cophAvg) %in% chau.despreciate),]
chau.cophAvg = chau.cophAvg[,c(2:8,1,9)]
colnames(chau.cophCom) = colnames(chau.cophSin) = colnames(chau.cophAvg)  = ssname
chau.cophCom[is.na(chau.cophCom)==TRUE] = chau.cophSin[is.na(chau.cophSin)==TRUE] = chau.cophAvg[is.na(chau.cophAvg)==TRUE]  = 0
chau.bxCom <- boxplot_graphics(chau.cophCom,title="CLHM",ylab="CCC",k=1)
chau.bxSin <- boxplot_graphics(chau.cophSin,title="SLHM",ylab="CCC",k=1)
chau.bxAvg <- boxplot_graphics(chau.cophAvg,title="ALHM",ylab="CCC",k=1)
btm.cophCom <- btm.res$complete$cophenetic
btm.cophCom <- btm.cophCom[!(row.names(btm.cophCom) %in% btm.despreciate),]
btm.cophCom = btm.cophCom[,c(2:8,1,9)]
btm.cophSin <- btm.res$single$cophenetic
btm.cophSin <- btm.cophSin[!(row.names(btm.cophSin) %in% btm.despreciate),]
btm.cophSin = btm.cophSin[,c(2:8,1,9)]
btm.cophAvg <- btm.res$average$cophenetic
btm.cophAvg <- btm.cophAvg[!(row.names(btm.cophAvg) %in% btm.despreciate),]
btm.cophAvg = btm.cophAvg[,c(2:8,1,9)]
colnames(btm.cophCom) = colnames(btm.cophSin) = colnames(btm.cophAvg)  = ssname
btm.cophCom[is.na(btm.cophCom)==TRUE] = btm.cophSin[is.na(btm.cophSin)==TRUE] = btm.cophAvg[is.na(btm.cophAvg)==TRUE]  = 0
btm.bxCom <- boxplot_graphics(btm.cophCom,title="CLHM",ylab="CCC",k=1)
btm.bxSin <- boxplot_graphics(btm.cophSin,title="SLHM",ylab="CCC",k=1)
btm.bxAvg <- boxplot_graphics(btm.cophAvg,title="ALHM",ylab="CCC",k=1)
tiff(filename = "git/analysissemantics/IMG_journal/Fig5.tiff",pointsize = 5,
width = 2250,height=2250,res=300)
grid.arrange(chau.bxSin,chau.bxCom,chau.bxAvg,
btm.bxSin, btm.bxCom, btm.bxAvg,
ncol=3, nrow = 2)
dev.off()
grid.arrange(chau.bxSin,chau.bxCom,chau.bxAvg,
btm.bxSin, btm.bxCom, btm.bxAvg,
ncol=3, nrow = 2)
dataset = "Chaussabel"
stat <- read.table(paste("/home/aaron/git/geneSetAnnotation/src/results/AARONSEEEE/newBriefings_Incomplete/",dataset,"_3/Analysis_Rep/CovertureQuartiles.csv",sep=""),header = T,sep="\t")
stat[is.na(stat$value),]
ssname <- c("Ganesan","LC","PS",
"Zhou","Resnik","Lin","Nunivers","DF","AIC","DAVID")
#ssname <- c("David","Lin")
stat <- stat[stat$SS%in%ssname,]
stat$SS<- factor(stat$SS, levels = unique(ssname))
stat$type<- factor(stat$type, levels = c("terms","genes"))
fill <- c("#ebebeb","#c0c0c0","#929292","#5f605f")
br <- c("Q0","Q1","Q2","Q3")
library(ggplot2)
k=1
tiff(filename = paste("git/analysissemantics/IMG_journal/Fig9",dataset,".tiff",sep=""),pointsize = 8,
width = 2250,height=1125,res=300)
ggplot(stat, aes(x =Quartile , y=value,fill=Quartile)) +
stat_boxplot(geom="errorbar")+
geom_boxplot(colour = "black",alpha=1,outlier.color = "black", outlier.shape = 20)+
scale_fill_manual(breaks =br ,values=fill)+ylab("Percentage %")+xlab("")+
facet_grid(type ~ SS) + ylim(c(0,100))+
theme(axis.text.x = element_text(hjust = 1,angle = 45),
axis.line.x=element_line(size=0.5*k, colour="black"),
axis.line.y = element_line(size=0.5*k,colour="black"),
strip.text.x = element_text(face="bold", size=8,lineheight=5.0),
strip.text.y = element_text(face="bold", size=10,lineheight=5.0),
strip.background = element_rect(fill="lightgray", colour="black",size=1),
axis.line = element_line(size=1,colour="black"),
axis.text = element_text(size=8.5*k),
legend.position = "none",
panel.border = element_rect(colour = "black", fill=NA, size=1),
panel.background = element_blank())
dev.off()
dataset = "Chaussabel"
stat <- read.table(paste("/home/aaron/git/geneSetAnnotation/src/results/AARONSEEEE/newBriefings_Incomplete/",dataset,"_3/Analysis_Rep/CovertureQuartiles.csv",sep=""),header = T,sep="\t")
stat[is.na(stat$value),]
ssname <- c("Ganesan","LC","PS",
"Zhou","Resnik","Lin","Nunivers","DF","AIC","DAVID")
#ssname <- c("David","Lin")
stat <- stat[stat$SS%in%ssname,]
stat$SS<- factor(stat$SS, levels = unique(ssname))
stat$type<- factor(stat$type, levels = c("terms","genes"))
fill <- c("#ebebeb","#c0c0c0","#929292","#5f605f")
br <- c("Q0","Q1","Q2","Q3")
library(ggplot2)
k=1
ggplot(stat, aes(x =Quartile , y=value,fill=Quartile)) +
stat_boxplot(geom="errorbar")+
geom_boxplot(colour = "black",alpha=1,outlier.color = "black", outlier.shape = 20)+
scale_fill_manual(breaks =br ,values=fill)+ylab("Percentage %")+xlab("")+
facet_grid(type ~ SS) + ylim(c(0,100))+
theme(axis.text.x = element_text(hjust = 1,angle = 45),
axis.line.x=element_line(size=0.5*k, colour="black"),
axis.line.y = element_line(size=0.5*k,colour="black"),
strip.text.x = element_text(face="bold", size=8,lineheight=5.0),
strip.text.y = element_text(face="bold", size=10,lineheight=5.0),
strip.background = element_rect(fill="lightgray", colour="black",size=1),
axis.line = element_line(size=1,colour="black"),
axis.text = element_text(size=8.5*k),
legend.position = "none",
panel.border = element_rect(colour = "black", fill=NA, size=1),
panel.background = element_blank())
dataset = "Chaussabel"
stat <- read.table(paste("/home/aaron/git/geneSetAnnotation/src/results/AARONSEEEE/newBriefings_Incomplete/",dataset,"_3/Analysis_Rep/CovertureQuartiles.csv",sep=""),header = T,sep="\t")
stat[is.na(stat$value),]
ssname <- c("Ganesan","LC","PS",
"Zhou","Resnik","Lin","Nunivers","DF","AIC","DAVID")
#ssname <- c("David","Lin")
stat <- stat[stat$SS%in%ssname,]
stat$SS<- factor(stat$SS, levels = unique(ssname))
stat$type<- factor(stat$type, levels = c("terms","genes"))
fill <- c("#ebebeb","#c0c0c0","#929292","#5f605f")
br <- c("Q0","Q1","Q2","Q3")
library(ggplot2)
k=1
ggplot(stat, aes(x =Quartile , y=value,fill=Quartile)) +
stat_boxplot(geom="errorbar")+
geom_boxplot(colour = "black",alpha=1,outlier.color = "black", outlier.shape = 20)+
scale_fill_manual(breaks =br ,values=fill)+ylab("Percentage %")+xlab("")+
facet_grid(type ~ SS) + ylim(c(0,100))+
theme(axis.text.x = element_text(hjust = 1,angle = 45),
axis.line.x=element_line(size=0.5*k, colour="black"),
axis.line.y = element_line(size=0.5*k,colour="black"),
strip.text.x = element_text(face="bold", size=8,lineheight=5.0),
strip.text.y = element_text(face="bold", size=10,lineheight=5.0),
strip.background = element_rect(fill="lightgray", colour="black",size=1),
axis.line = element_line(size=1,colour="black"),
axis.text = element_text(size=8.5*k),
legend.position = "none",
panel.border = element_rect(colour = "black", fill=NA, size=1),
panel.background = element_blank())
ggplot(stat, aes(x =Quartile , y=value,fill=Quartile)) +
stat_boxplot(geom="errorbar")+
geom_boxplot(colour = "black",alpha=1,outlier.color = "black", outlier.shape = 20)+
scale_fill_manual(breaks =br ,values=fill)+ylab("Percentage %")+xlab("")+
facet_grid(type ~ SS) + #ylim(c(0,100))+
theme(axis.text.x = element_text(hjust = 1,angle = 45),
axis.line.x=element_line(size=0.5*k, colour="black"),
axis.line.y = element_line(size=0.5*k,colour="black"),
strip.text.x = element_text(face="bold", size=8,lineheight=5.0),
strip.text.y = element_text(face="bold", size=10,lineheight=5.0),
strip.background = element_rect(fill="lightgray", colour="black",size=1),
axis.line = element_line(size=1,colour="black"),
axis.text = element_text(size=8.5*k),
legend.position = "none",
panel.border = element_rect(colour = "black", fill=NA, size=1),
panel.background = element_blank())
ggplot(stat, aes(x =Quartile , y=value,fill=Quartile)) +
stat_boxplot(geom="errorbar")+
geom_boxplot(colour = "black",alpha=1,outlier.color = "black", outlier.shape = 20)+
scale_fill_manual(breaks =br ,values=fill)+ylab("Percentage %")+xlab("")+
facet_grid(type ~ SS) + #ylim(c(0,100))+
theme(axis.text.x = element_text(hjust = 1,angle = 45),
axis.line.x=element_line(size=0.5*k, colour="black"),
axis.line.y = element_line(size=0.5*k,colour="black"),
strip.text.x = element_text(face="bold", size=8,lineheight=5.0),
strip.text.y = element_text(face="bold", size=10,lineheight=5.0),
strip.background = element_rect(fill="lightgray", colour="black",size=1),
axis.line = element_line(size=1,colour="black"),
axis.text = element_text(size=8.5*k),
legend.position = "none",
panel.border = element_rect(colour = "black", fill=NA, size=1),
panel.background = element_blank())
#stat <- read.table(paste("/home/aaron/git/geneSetAnnotation/src/results/AARONSEEEE/newBriefings_Incomplete/",dataset,"_3/Analysis_Rep/CovertureQuartiles.csv",sep=""),header = T,sep="\t")
stat <- read.table(paste("/home/aaron/git/gsan-api-is_a/results/newBriefings_Incomplete/",dataset,"_3/Analysis_Rep/CovertureQuartiles.csv",sep=""),header = T,sep="\t")
stat[is.na(stat$value),]
ssname <- c("Ganesan","LC","PS",
"Zhou","Resnik","Lin","Nunivers","DF","AIC","DAVID")
#ssname <- c("David","Lin")
stat <- stat[stat$SS%in%ssname,]
stat$SS<- factor(stat$SS, levels = unique(ssname))
stat$type<- factor(stat$type, levels = c("terms","genes"))
fill <- c("#ebebeb","#c0c0c0","#929292","#5f605f")
br <- c("Q0","Q1","Q2","Q3")
library(ggplot2)
k=1
ggplot(stat, aes(x =Quartile , y=value,fill=Quartile)) +
stat_boxplot(geom="errorbar")+
geom_boxplot(colour = "black",alpha=1,outlier.color = "black", outlier.shape = 20)+
scale_fill_manual(breaks =br ,values=fill)+ylab("Percentage %")+xlab("")+
facet_grid(type ~ SS) + ylim(c(0,100))+
theme(axis.text.x = element_text(hjust = 1,angle = 45),
axis.line.x=element_line(size=0.5*k, colour="black"),
axis.line.y = element_line(size=0.5*k,colour="black"),
strip.text.x = element_text(face="bold", size=8,lineheight=5.0),
strip.text.y = element_text(face="bold", size=10,lineheight=5.0),
strip.background = element_rect(fill="lightgray", colour="black",size=1),
axis.line = element_line(size=1,colour="black"),
axis.text = element_text(size=8.5*k),
legend.position = "none",
panel.border = element_rect(colour = "black", fill=NA, size=1),
panel.background = element_blank())
load("/home/aaron/Downloads/journal.pcbi.1004310.s007/ReproducibleRFiles/GMTs_PLOScb.RData")
load("/home/aaron/Downloads/journal.pcbi.1004310.s007/ReproducibleRFiles/GMTs_PLOScb.RData")
View(gmt_modulesV2)
dataset = "Chaussabel"
stat <- read.table(paste("/home/aaron/git/geneSetAnnotation/src/results/AARONSEEEE_F/newBriefings_Incomplete/",dataset,"_3/Analysis_Rep/CovertureQuartiles.csv",sep=""),header = T,sep="\t")
stat[is.na(stat$value),]
ssname <- c("Ganesan","LC","PS",
"Zhou","Resnik","Lin","Nunivers","DF","AIC","DAVID")
#ssname <- c("David","Lin")
stat <- stat[stat$SS%in%ssname,]
stat$SS<- factor(stat$SS, levels = unique(ssname))
stat$type<- factor(stat$type, levels = c("terms","genes"))
fill <- c("#ebebeb","#c0c0c0","#929292","#5f605f")
br <- c("Q0","Q1","Q2","Q3")
library(ggplot2)
k=1
ggplot(stat, aes(x =Quartile , y=value,fill=Quartile)) +
stat_boxplot(geom="errorbar")+
geom_boxplot(colour = "black",alpha=1,outlier.color = "black", outlier.shape = 20)+
scale_fill_manual(breaks =br ,values=fill)+ylab("Percentage %")+xlab("")+
facet_grid(type ~ SS) + ylim(c(0,100))+
theme(axis.text.x = element_text(hjust = 1,angle = 45),
axis.line.x=element_line(size=0.5*k, colour="black"),
axis.line.y = element_line(size=0.5*k,colour="black"),
strip.text.x = element_text(face="bold", size=8,lineheight=5.0),
strip.text.y = element_text(face="bold", size=10,lineheight=5.0),
strip.background = element_rect(fill="lightgray", colour="black",size=1),
axis.line = element_line(size=1,colour="black"),
axis.text = element_text(size=8.5*k),
legend.position = "none",
panel.border = element_rect(colour = "black", fill=NA, size=1),
panel.background = element_blank())
nrows(stat)
nrow(stat)
head(stat)
head(stat[stat$value==NA,])
head(stat[is.na(stat$value),])
stat[is.na(stat$value),]
na <- stat[is.na(stat$value),]
View(na)
unique(na$Module)
length(unique(na$Module))
cien <- stat[stat$value>100,]
cien
cien <- stat[stat$value==100,]
head(cien)
stat <- read.table(paste("/home/aaron/git/geneSetAnnotation/src/results/AARONSEEEE/newBriefings_Incomplete/",dataset,"_3/Analysis_Rep/CovertureQuartiles.csv",sep=""),header = T,sep="\t")
stat <- read.table(paste("/home/aaron/git/geneSetAnnotation/src/results/AARONSEEEE_NF/newBriefings_Incomplete/",dataset,"_3/Analysis_Rep/CovertureQuartiles.csv",sep=""),header = T,sep="\t")
stat[is.na(stat$value),]
ssname <- c("Ganesan","LC","PS",
"Zhou","Resnik","Lin","Nunivers","DF","AIC","DAVID")
#ssname <- c("David","Lin")
stat <- stat[stat$SS%in%ssname,]
stat$SS<- factor(stat$SS, levels = unique(ssname))
stat$type<- factor(stat$type, levels = c("terms","genes"))
fill <- c("#ebebeb","#c0c0c0","#929292","#5f605f")
br <- c("Q0","Q1","Q2","Q3")
library(ggplot2)
k=1
ggplot(stat, aes(x =Quartile , y=value,fill=Quartile)) +
stat_boxplot(geom="errorbar")+
geom_boxplot(colour = "black",alpha=1,outlier.color = "black", outlier.shape = 20)+
scale_fill_manual(breaks =br ,values=fill)+ylab("Percentage %")+xlab("")+
facet_grid(type ~ SS) + ylim(c(0,100))+
theme(axis.text.x = element_text(hjust = 1,angle = 45),
axis.line.x=element_line(size=0.5*k, colour="black"),
axis.line.y = element_line(size=0.5*k,colour="black"),
strip.text.x = element_text(face="bold", size=8,lineheight=5.0),
strip.text.y = element_text(face="bold", size=10,lineheight=5.0),
strip.background = element_rect(fill="lightgray", colour="black",size=1),
axis.line = element_line(size=1,colour="black"),
axis.text = element_text(size=8.5*k),
legend.position = "none",
panel.border = element_rect(colour = "black", fill=NA, size=1),
panel.background = element_blank())
#########################################################################################################
# Figure intermediary
dataset = "Chaussabel"
chau.stat <- read.table(paste("/home/aaron/git/geneSetAnnotation/src/results/AARONSEEEE_NF/newBriefings_Incomplete/",dataset,"_3/Analysis_Rep/TermsVSRep.csv",sep=""),header = T,sep="\t")
# He cambiado manualmente los PerX por QX y GOUniversal por NUniver. (el punto hay que contarlo).
ssname <- c("Annotation","Ganesan","LC","PS", "Zhou","Resnik","Lin","Nunivers","DF","AIC")
#ssname <-c("Annotation","Ganesan","LC")
#ssname <- c("David","Lin")
chau.stat <- chau.stat[chau.stat$SS%in%ssname,]
chau.stat$SS<- factor(chau.stat$SS, levels = unique(ssname))
library(ggplot2)
k=1
ggplot(chau.stat, aes(x =SS , y=value)) +
stat_boxplot(geom="errorbar")+
geom_boxplot(colour = "black",fill= "#DCDCDC",alpha=1,outlier.color = "black", outlier.shape = 20)+
ylab("Number of terms")+xlab("")+ ylim(0,500)+
#facet_grid(~SS,scales = "free", space = "free") +
ggtitle("")+theme(axis.text.x = element_text(family ="sans",hjust = 1,angle = 45),
axis.line.x=element_line(size=0.5*k, colour="black"),
axis.line.y = element_line(size=0.5*k,colour="black"),
axis.line = element_line(size=1,colour="black"),
axis.title = element_text(size=10),
axis.title.y = element_text(family ="sans",margin = margin(0,20,0,0)),
axis.title.x = element_text(family ="sans",margin = margin(20,0,0,0)),
axis.text = element_text(family ="sans",size=10),
#panel.grid.major = element_blank(),
# panel.grid.minor = element_blank(),
#  panel.border =  element_rect(colour = "black", fill=NA, size=1),
panel.background = element_blank(),
plot.title = element_text(family ="sans",size=10,hjust = 0.5,face="bold",margin = margin(5,0,40,0)))
quartBoxPlotFunction <- function(stat){
k=1
fill <- c("#ebebeb","#c0c0c0","#929292","#5f605f")
br <- c("Q0","Q1","Q2","Q3")
ggplot(stat, aes(x =Quartile , y=value,fill=Quartile)) +
stat_boxplot(geom="errorbar")+
geom_boxplot(colour = "black",alpha=1,outlier.color = "black", outlier.shape = 20)+
scale_fill_manual(breaks =br ,values=fill)+ylab("Percentage %")+xlab("")+
facet_grid(type ~ SS) + ylim(c(0,100))+
theme(axis.text.x = element_text(hjust = 1,angle = 45),
axis.line.x=element_line(size=0.5*k, colour="black"),
axis.line.y = element_line(size=0.5*k,colour="black"),
strip.text.x = element_text(face="bold", size=8,lineheight=5.0),
strip.text.y = element_text(face="bold", size=10,lineheight=5.0),
strip.background = element_rect(fill="lightgray", colour="black",size=1),
axis.line = element_line(size=1,colour="black"),
axis.text = element_text(size=8.5*k),
legend.position = "none",
panel.border = element_rect(colour = "black", fill=NA, size=1),
panel.background = element_blank())
}
dataset = "Chaussabel"
stat <- read.table(paste("newBriefings_Incomplete/",dataset,"_3/Analysis_Rep/CovertureQuartiles.csv",sep=""),header = T,sep="\t")
setwd(dirname(rstudioapi::getSourceEditorContext()$path))
setwd("../../results/")
resFile = "visualization/"
if(!dir.exists(resFile)){
dir.create(resFile)
}
library(ggplot2)
stat <- read.table(paste("newBriefings_Incomplete/",dataset,"_3/Analysis_Rep/CovertureQuartiles.csv",sep=""),header = T,sep="\t")
ssname <- c("Ganesan","LC","PS",
"Zhou","Resnik","Lin","Nunivers","DF","AIC","DAVID")
stat <- stat[stat$SS%in%ssname,]
stat$SS<- factor(stat$SS, levels = unique(ssname))
stat$type<- factor(stat$type, levels = c("terms","genes"))
quartBoxPlotFunction(stat)
dataset = "Chaussabel"
stat <- read.table(paste("newBriefings_Incomplete/",dataset,"_3/Analysis_Rep/CovertureQuartiles.csv",sep=""),header = T,sep="\t")
ssname <- c("Ganesan","LC","PS",
"Zhou","Resnik","Lin","Nunivers","DF","AIC","DAVID")
stat <- stat[stat$SS%in%ssname,]
stat$SS<- factor(stat$SS, levels = unique(ssname))
stat$type<- factor(stat$type, levels = c("terms","genes"))
quartBoxPlotFunction(stat)
dataset = "BTM"
stat <- read.table(paste("newBriefings_Incomplete/",dataset,"_3/Analysis_Rep/CovertureQuartiles.csv",sep=""),header = T,sep="\t")
ssname <- c("Ganesan","LC","PS",
"Zhou","Resnik","Lin","Nunivers","DF","AIC","DAVID")
stat <- stat[stat$SS%in%ssname,]
stat$SS<- factor(stat$SS, levels = unique(ssname))
stat$type<- factor(stat$type, levels = c("terms","genes"))
quartBoxPlotFunction(stat)
